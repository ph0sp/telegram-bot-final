import logging
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler, CallbackContext

from config import QUESTIONS, YOUR_CHAT_ID, logger, GENDER, READY_CONFIRMATION, QUESTIONNAIRE
from database import (
    save_user_info, update_user_activity, check_user_registered,
    save_questionnaire_answer, save_message
)
from services.google_sheets import save_client_to_sheets

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –í–°–ï–ì–î–ê –Ω–∞—á–∏–Ω–∞–µ—Ç –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ"""
    try:
        user = update.effective_user
        user_id = user.id
        
        logger.info(f"üéØ –ù–û–í–ê–Ø –ê–ù–ö–ï–¢–ê /start –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id} ({user.first_name})")
        
        # –í–°–ï–ì–î–ê –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É - –æ—á–∏—â–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        context.user_data.clear()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ (–ê–°–ò–ù–•–†–û–ù–ù–û)
        try:
            await save_user_info(user_id, user.username, user.first_name, user.last_name)
            await update_user_activity(user_id)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –∞–Ω–∫–µ—Ç—ã
        
        # –ö–ù–û–ü–ö–ò –° –í–ê–®–ò–ú–ò –°–ú–ê–ô–õ–ò–ö–ê–ú–ò
        keyboard = [['üßå –ú—É–∂—Å–∫–æ–π', 'üßùüèΩ‚Äç‚ôÄÔ∏è –ñ–µ–Ω—Å–∫–∏–π']]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
        
        logger.info(f"üì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä –ø–æ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
        await update.message.reply_text(
            'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.\n\n'
            '–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:',
            reply_markup=reply_markup
        )
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ù–û–í–û–ô –∞–Ω–∫–µ—Ç—ã
        context.user_data['current_question'] = -1
        context.user_data['answers'] = {}
        context.user_data['questionnaire_started'] = True
        context.user_data['questionnaire_id'] = datetime.now().strftime("%Y%m%d_%H%M%S")
        
        logger.info(f"üîÅ –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ GENDER ({GENDER})")
        
        return GENDER
    
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ /start: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        return ConversationHandler.END

async def gender_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
    try:
        user_id = update.effective_user.id
        user_text = update.message.text
        
        logger.info(f"üé≠ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª: {user_text}")
        
        # –ù–ê–î–ï–ñ–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
        if '–ú—É–∂—Å–∫–æ–π' in user_text:
            gender = '–ú—É–∂—Å–∫–æ–π'
            assistant_name = '–ê–Ω—Ç–æ–Ω'
            greeting_emoji = 'üßå'
        elif '–ñ–µ–Ω—Å–∫–∏–π' in user_text:
            gender = '–ñ–µ–Ω—Å–∫–∏–π'
            assistant_name = '–í–∞–ª–µ—Ä–∏—è' 
            greeting_emoji = 'üßùüèΩ‚Äç‚ôÄÔ∏è'
        else:
            # –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞
            logger.warning(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–ª–∞: {user_text}, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            gender = '–ú—É–∂—Å–∫–æ–π'
            assistant_name = '–ê–Ω—Ç–æ–Ω'
            greeting_emoji = 'üßå'
        
        context.user_data['assistant_gender'] = gender
        context.user_data['assistant_name'] = assistant_name
        context.user_data['greeting_emoji'] = greeting_emoji
        
        logger.info(f"‚úÖ –í—ã–±—Ä–∞–Ω –ø–æ–ª: {gender}, –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç: {assistant_name}")
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–∫ –≤ –≤–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ - –û–î–ò–ù –†–ê–ó
        await update.message.reply_text(
            f'{greeting_emoji} –ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç {assistant_name}. –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.\n\n'
            f'–ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äì –ø–æ–º–æ—á—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –¥–µ–Ω—å –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞ –∏ –≤—ã–≥–æ—Ä–∞–Ω–∏—è.\n\n'
            f'–Ø —Å–æ—Å—Ç–∞–≤–ª—é –¥–ª—è –≤–∞—Å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –Ω–∞ –º–µ—Å—è—Ü, –∞ –∑–∞—Ç–µ–º –º—ã –±—É–¥–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, '
            f'—á—Ç–æ–±—ã –≤—ã –¥–≤–∏–≥–∞–ª–∏—Å—å –∫ —Ü–µ–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏ —Å –∑–∞–±–æ—Ç–æ–π –æ –≥–ª–∞–≤–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–∞—Ö: —Å–Ω–µ, —Å–ø–æ—Ä—Ç–µ –∏ –ø–∏—Ç–∞–Ω–∏–∏.\n\n'
            f'–î–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—Å, –º–Ω–µ –Ω—É–∂–Ω–æ –ø–æ–Ω—è—Ç—å –≤–∞—à —Ä–∏—Ç–º –∂–∏–∑–Ω–∏ –∏ —Ü–µ–ª–∏. '
            f'–≠—Ç–æ –∑–∞–π–º–µ—Ç –æ–∫–æ–ª–æ 25-30 –º–∏–Ω—É—Ç. –ù–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –Ω–∞ –º–µ—Å—è—Ü, –∞ –Ω–µ —à–∞–±–ª–æ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–µ–ª.\n\n'
            f'–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?',
            reply_markup=ReplyKeyboardRemove()
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º, —á—Ç–æ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        context.user_data['current_question'] = -1
        
        logger.info(f"üîÅ –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ READY_CONFIRMATION: {READY_CONFIRMATION}")
        return READY_CONFIRMATION
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ gender_choice: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start"
        )
        return ConversationHandler.END

async def handle_ready_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –Ω–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç—É"""
    try:
        user_id = update.effective_user.id
        answer_text = update.message.text
        
        logger.info(f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –Ω–∞—á–∞–ª–æ –∞–Ω–∫–µ—Ç—ã: {answer_text}")
        
        # –í–°–ï–ì–î–ê –Ω–∞—á–∏–Ω–∞–µ–º –∞–Ω–∫–µ—Ç—É —Å –ü–ï–†–í–û–ì–û –≤–æ–ø—Ä–æ—Å–∞
        context.user_data['current_question'] = 0
        context.user_data['answers'] = {}
        context.user_data['questionnaire_started'] = True
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ü–ï–†–í–´–ô –≤–æ–ø—Ä–æ—Å
        await update.message.reply_text(QUESTIONS[0])
        
        logger.info(f"üîÅ –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∫–µ—Ç—É —Å –≤–æ–ø—Ä–æ—Å–∞ 0, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ QUESTIONNAIRE: {QUESTIONNAIRE}")
        return QUESTIONNAIRE
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ handle_ready_confirmation: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start"
        )
        return ConversationHandler.END

async def handle_question(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∞–Ω–∫–µ—Ç—ã"""
    try:
        user_id = update.effective_user.id
        answer_text = update.message.text
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–Ω–∫–µ—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—á–∞—Ç–∞
        if 'questionnaire_started' not in context.user_data:
            logger.error(f"‚ùå –ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞—á–∞—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            await update.message.reply_text("‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ —Å /start")
            return ConversationHandler.END
        
        current_question = context.user_data.get('current_question', 0)
        logger.info(f"üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å #{current_question}: {answer_text[:50]}...")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ (–ê–°–ò–ù–•–†–û–ù–ù–û)
        try:
            await save_questionnaire_answer(user_id, current_question, QUESTIONS[current_question], answer_text)
            context.user_data['answers'][current_question] = answer_text
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ –æ—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ context.user_data
        
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
        next_question = current_question + 1
        
        if next_question < len(QUESTIONS):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
            context.user_data['current_question'] = next_question
            await update.message.reply_text(QUESTIONS[next_question])
            
            logger.info(f"üîÅ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–æ–ø—Ä–æ—Å—É {next_question}, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ QUESTIONNAIRE: {QUESTIONNAIRE}")
            return QUESTIONNAIRE
        else:
            # –ê–Ω–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
            logger.info(f"‚úÖ –ê–Ω–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            return await finish_questionnaire(update, context)
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ handle_question: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å /start"
        )
        return ConversationHandler.END

async def finish_questionnaire(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ó–∞–≤–µ—Ä—à–∞–µ—Ç –∞–Ω–∫–µ—Ç—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ"""
    try:
        user = update.effective_user
        user_id = user.id
        assistant_name = context.user_data.get('assistant_name', '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç')
        questionnaire_id = context.user_data.get('questionnaire_id', 'unknown')
        
        logger.info(f"üéâ –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∫–µ—Ç—É {questionnaire_id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã –≤ Google Sheets —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
        user_data = {
            'user_id': user.id,
            'telegram_username': user.username,
            'first_name': user.first_name,
            'last_name': user.last_name,
            'start_date': datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            'main_goal': context.user_data['answers'].get(0, ''),
            'last_activity': datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            '—Ç–µ–∫—É—â–∏–π_—É—Ä–æ–≤–µ–Ω—å': '–ù–æ–≤–∏—á–æ–∫',
            '–æ—á–∫–∏_–æ–ø—ã—Ç–∞': '0',
            '—Ç–µ–∫—É—â–∞—è_—Å–µ—Ä–∏—è_–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏': '0',
            '–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è_—Å–µ—Ä–∏—è_–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏': '0',
            '–ª—é–±–∏–º—ã–π_—Ä–∏—Ç—É–∞–ª': '',
            '–¥–∞—Ç–∞_–ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ_–ø—Ä–æ–≥—Ä–µ—Å—Å–∞': datetime.now().strftime("%Y-%m-%d"),
            '–±–ª–∏–∂–∞–π—à–∞—è_—Ü–µ–ª—å': '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–≤—É—é –Ω–µ–¥–µ–ª—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
            'questionnaire_id': questionnaire_id,  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∞–Ω–∫–µ—Ç—ã
            'assistant_name': assistant_name
        }
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
        for i, question in enumerate(QUESTIONS):
            answer = context.user_data['answers'].get(i, '‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')
            user_data[f'question_{i+1}'] = answer
        
        try:
            save_client_to_sheets(user_data)
            logger.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã {questionnaire_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Google Sheets")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ Google Sheets: {e}")
            # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∞–Ω–∫–µ—Ç—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É
        questionnaire = f"üìã –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
        questionnaire += f"üë§ ID: {user.id}\n"
        questionnaire += f"üìõ –ò–º—è: {user.first_name}\n"
        if user.last_name:
            questionnaire += f"üìõ –§–∞–º–∏–ª–∏—è: {user.last_name}\n"
        if user.username:
            questionnaire += f"üîó Username: @{user.username}\n"
        questionnaire += f"üìÖ –î–∞—Ç–∞: {update.message.date.strftime('%Y-%m-%d %H:%M')}\n"
        questionnaire += f"üë®‚Äçüíº –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: {assistant_name}\n"
        questionnaire += f"üÜî ID –∞–Ω–∫–µ—Ç—ã: {questionnaire_id}\n\n"
        
        questionnaire += "üìù –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:\n\n"
        
        for i, question in enumerate(QUESTIONS):
            answer = context.user_data['answers'].get(i, '‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')
            # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
            truncated_answer = answer[:500] + "..." if len(answer) > 500 else answer
            questionnaire += f"‚ùì {i+1}. {question}:\n"
            questionnaire += f"üí¨ {truncated_answer}\n\n"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
        max_length = 4096
        if len(questionnaire) > max_length:
            parts = [questionnaire[i:i+max_length] for i in range(0, len(questionnaire), max_length)]
            for part_num, part in enumerate(parts, 1):
                try:
                    await context.bot.send_message(chat_id=YOUR_CHAT_ID, text=part)
                    logger.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —á–∞—Å—Ç—å –∞–Ω–∫–µ—Ç—ã {part_num}/{len(parts)}")
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–∞—Å—Ç–∏ –∞–Ω–∫–µ—Ç—ã {part_num}: {e}")
        else:
            try:
                await context.bot.send_message(chat_id=YOUR_CHAT_ID, text=questionnaire)
                logger.info("‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω—É")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∫–µ—Ç—ã: {e}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω—É
        try:
            reply_markup = InlineKeyboardMarkup([
                [InlineKeyboardButton("üìù –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data=f"reply_{user.id}")],
                [InlineKeyboardButton("üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—É", callback_data=f"view_questionnaire_{user.id}")],
                [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data=f"stats_{user.id}")],
                [InlineKeyboardButton("üìã –°–æ–∑–¥–∞—Ç—å –ø–ª–∞–Ω", callback_data=f"create_plan_{user.id}")]
            ])
            
            await context.bot.send_message(
                chat_id=YOUR_CHAT_ID, 
                text=f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} –∑–∞–≤–µ—Ä—à–∏–ª –∞–Ω–∫–µ—Ç—É {questionnaire_id}!",
                reply_markup=reply_markup
            )
            logger.info("‚úÖ –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–¥–º–∏–Ω—É")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω—É: {e}")
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –º–µ–Ω—é
        keyboard = [
            ['üìä –ü—Ä–æ–≥—Ä–µ—Å—Å', 'üë§ –ü—Ä–æ—Ñ–∏–ª—å'],
            ['üìã –ü–ª–∞–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è', 'üîî –ú–æ–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è'],
            ['‚ÑπÔ∏è –ü–æ–º–æ—â—å', 'üéÆ –û—á–∫–∏ –æ–ø—ã—Ç–∞']
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        
        await update.message.reply_text(
            "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã!\n\n"
            "‚úÖ –Ø –ø–µ—Ä–µ–¥–∞–ª –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞—à–µ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É. –í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ –æ–Ω –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç –¥–ª—è –≤–∞—Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω.\n\n"
            "üîî –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–º—É –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É!\n\n"
            "üí° –í—ã –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º:\n"
            "'–Ω–∞–ø–æ–º–Ω–∏ –º–Ω–µ –≤ 20:00 —Å—Ö–æ–¥–∏—Ç—å –≤ –¥—É—à'\n"
            "'–Ω–∞–ø–æ–º–∏–Ω–∞–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 8:00 –¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É'\n\n"
            "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
            reply_markup=reply_markup
        )
        
        # –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–µ
        keys_to_keep = ['assistant_name', 'assistant_gender', 'greeting_emoji']
        preserved_data = {k: context.user_data.get(k) for k in keys_to_keep if k in context.user_data}
        context.user_data.clear()
        context.user_data.update(preserved_data)
        
        logger.info(f"üßπ –î–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã –æ—á–∏—â–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")
        return ConversationHandler.END
    
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ finish_questionnaire: {e}")
        await update.message.reply_text(
            "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! –ê–Ω–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–±–æ–ª—å—à–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. "
            "–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
        )
        return ConversationHandler.END

async def cancel(update: Update, context: CallbackContext) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥ –∏ –æ—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ"""
    try:
        user_id = update.effective_user.id
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        keys_to_keep = ['assistant_name', 'assistant_gender', 'greeting_emoji']
        preserved_data = {k: context.user_data.get(k) for k in keys_to_keep if k in context.user_data}
        context.user_data.clear()
        context.user_data.update(preserved_data)
        
        logger.info(f"‚ùå –ê–Ω–∫–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        
        await update.message.reply_text(
            '‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.',
            reply_markup=ReplyKeyboardRemove()
        )
        return ConversationHandler.END
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ cancel: {e}")
        await update.message.reply_text('‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.')
        return ConversationHandler.END
