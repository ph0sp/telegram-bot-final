import os
import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    CallbackContext,
    ConversationHandler,
    filters
)

# ========== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ==========

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ.get('BOT_TOKEN')

if not TOKEN:
    logger.error("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ BOT_TOKEN –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Render")
    exit(1)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
GENDER, BIO = range(2)

# ========== –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´ ==========

async def start(update: Update, context: CallbackContext) -> int:
    """–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º"""
    user = update.effective_user
    
    keyboard = [['üë® –ú—É–∂—Å–∫–æ–π', 'üë© –ñ–µ–Ω—Å–∫–∏–π']]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    
    await update.message.reply_text(
        'üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!\n\n'
        '–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –ø–æ–ª –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:',
        reply_markup=reply_markup
    )
    
    return GENDER

async def gender_choice(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
    gender = update.message.text
    
    if '–ú—É–∂—Å–∫–æ–π' in gender:
        assistant_name = '–ê–Ω—Ç–æ–Ω'
    else:
        assistant_name = '–í–∞–ª–µ—Ä–∏—è'
    
    context.user_data['assistant_name'] = assistant_name
    
    await update.message.reply_text(
        f'üëã –û—Ç–ª–∏—á–Ω–æ! –ú–µ–Ω—è –∑–æ–≤—É—Ç {assistant_name}. '
        f'–Ø –±—É–¥—É —Ç–≤–æ–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º!\n\n'
        f'–†–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫–∏–µ —É —Ç–µ–±—è —Ü–µ–ª–∏ –∏ —á–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?',
        reply_markup=ReplyKeyboardRemove()
    )
    
    return BIO

async def bio(update: Update, context: CallbackContext) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    user_bio = update.message.text
    assistant_name = context.user_data['assistant_name']
    
    await update.message.reply_text(
        f'üéâ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è! –¢–µ–ø–µ—Ä—å —è, {assistant_name}, –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ '
        f'–¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ç–≤–æ–∏—Ö —Ü–µ–ª–µ–π!\n\n'
        f'–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –¥–ª—è —Ç–µ–±—è —Å–¥–µ–ª–∞—Ç—å:\n\n'
        'üìã /plan - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–≤–æ–π –ø–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å\n'
        'üìä /progress - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–≤–æ–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\n'
        'üë§ /profile - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ\n'
        '‚ÑπÔ∏è /help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n\n'
        'üí¨ –¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - —è –Ω–∞ —Å–≤—è–∑–∏!'
    )
    
    return ConversationHandler.END

async def cancel(update: Update, context: CallbackContext) -> int:
    """–û—Ç–º–µ–Ω–∞ –¥–∏–∞–ª–æ–≥–∞"""
    await update.message.reply_text(
        '–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω. –ù–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.',
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END

async def plan_command(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å"""
    plan_text = (
        "üìã –¢–≤–æ–π –ø–ª–∞–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
        "üåÖ –£—Ç—Ä–æ (8:00 - 12:00):\n"
        "‚Ä¢ –ó–∞—Ä—è–¥–∫–∞ –∏ –º–µ–¥–∏—Ç–∞—Ü–∏—è - 20 –º–∏–Ω\n"
        "‚Ä¢ –†–∞–±–æ—Ç–∞ –Ω–∞–¥ –≥–ª–∞–≤–Ω–æ–π –∑–∞–¥–∞—á–µ–π - 3 —á–∞—Å–∞\n"
        "‚Ä¢ –ü–æ–ª–µ–∑–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫\n\n"
        "üåû –î–µ–Ω—å (12:00 - 18:00):\n"
        "‚Ä¢ –û–±–µ–¥ –∏ –æ—Ç–¥—ã—Ö - 1 —á–∞—Å\n"
        "‚Ä¢ –í—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ - 2 —á–∞—Å–∞\n"
        "‚Ä¢ –û–±—É—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ - 1 —á–∞—Å\n\n"
        "üåô –í–µ—á–µ—Ä (18:00 - 22:00):\n"
        "‚Ä¢ –°–ø–æ—Ä—Ç –∏–ª–∏ –ø—Ä–æ–≥—É–ª–∫–∞ - 1 —á–∞—Å\n"
        "‚Ä¢ –£–∂–∏–Ω –∏ –æ—Ç–¥—ã—Ö\n"
        "‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è\n\n"
        "üí° –°–æ–≤–µ—Ç: –î–µ–ª–∞–π –ø–µ—Ä–µ—Ä—ã–≤—ã –∫–∞–∂–¥—ã–µ 45 –º–∏–Ω—É—Ç —Ä–∞–±–æ—Ç—ã!"
    )
    
    await update.message.reply_text(plan_text)

async def progress_command(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å"""
    progress_text = (
        "üìä –¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å:\n\n"
        "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á –∑–∞ –Ω–µ–¥–µ–ª—é: 15/20\n"
        "üèÉ –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: 4/5 –¥–Ω–µ–π\n"
        "üìö –û–±—É—á–µ–Ω–∏–µ: 5/7 —á–∞—Å–æ–≤\n"
        "üí§ –°—Ä–µ–¥–Ω–∏–π —Å–æ–Ω: 7.5 —á–∞—Å–æ–≤\n\n"
        "üéØ –û—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!"
    )
    
    await update.message.reply_text(progress_text)

async def profile_command(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å"""
    user = update.effective_user
    
    profile_text = (
        f"üë§ –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
        f"üìõ –ò–º—è: {user.first_name}\n"
        f"üÜî ID: {user.id}\n"
        f"üîó Username: @{user.username if user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"üíé –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n\n"
        f"‚ú® –¢—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏!"
    )
    
    await update.message.reply_text(profile_text)

async def help_command(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É"""
    help_text = (
        "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:\n\n"
        "üîπ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/plan - –ü–ª–∞–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"
        "/progress - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\n"
        "/profile - –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n"
        "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
        "üí° –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º!"
    )
    
    await update.message.reply_text(help_text)

async def handle_message(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await update.message.reply_text(
        "‚úÖ –ü–æ–ª—É—á–∏–ª —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –°–∫–æ—Ä–æ –æ—Ç–≤–µ—á—É üí¨\n\n"
        "–ê –ø–æ–∫–∞ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å:\n"
        "üìã /plan - —Ç–≤–æ–π –ø–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å\n"
        "üìä /progress - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"
    )

# ========== –ó–ê–ü–£–°–ö –ë–û–¢–ê ==========

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º Application
        application = Application.builder().token(TOKEN).build()
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∏–∞–ª–æ–≥–∞
        conv_handler = ConversationHandler(
            entry_points=[CommandHandler('start', start)],
            states={
                GENDER: [MessageHandler(filters.Regex('^(üë® –ú—É–∂—Å–∫–æ–π|üë© –ñ–µ–Ω—Å–∫–∏–π)$'), gender_choice)],
                BIO: [MessageHandler(filters.TEXT & ~filters.COMMAND, bio)],
            },
            fallbacks=[CommandHandler('cancel', cancel)],
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        application.add_handler(conv_handler)
        application.add_handler(CommandHandler("plan", plan_command))
        application.add_handler(CommandHandler("progress", progress_command))
        application.add_handler(CommandHandler("profile", profile_command))
        application.add_handler(CommandHandler("help", help_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        application.run_polling()
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")

if __name__ == '__main__':
    main()
